buildscript {
    ext {
        restdocsVersion = '0.18.2'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.epages.restdocs-api-spec' version "${restdocsVersion}"
}

group = 'com.market'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.session:spring-session-core'
    implementation 'org.hibernate:hibernate-validator:8.0.0.Final'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'com.h2database:h2'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'

    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'com.mysql:mysql-connector-j'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation "com.epages:restdocs-api-spec-mockmvc:${restdocsVersion}"
}

tasks.named('test') {
    useJUnitPlatform()
}


// spring rest docs
openapi3 {
    server = 'http://localhost:8080'
    description = 'API description'
    version = '0.1.0'
    outputFileNamePrefix = 'openapi3'
    outputDirectory = "${project.buildDir}/resources/main/static/docs"

    format = 'yaml'
}

tasks.register('generateOpenApi') {
    doFirst {
        delete file('src/main/resources/static/docs/')
    }

    doLast {
        copy {
            from "${project.buildDir}/resources/main/static/docs/"
            into 'src/main/resources/static/docs/'
        }
    }
}

tasks.named("build") {
    finalizedBy 'openapi3'
    finalizedBy 'generateOpenApi'
}
//